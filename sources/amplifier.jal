;===============================================================================
; Title: Amplifier for the digital alarm clock.
;
; Author: Rob Jansen, Copyright (c) 2023..2023, all rights reserved.
;
; Revisions
; ---------
; 2023-02-21 : Initial version
; 2023-07-23 : Change volume steps from 15 to 20 so minium sound is lower.
;
; Compiler: jalv25r7
;
; Description: This module provides the functions for changing the volume. The
;              volume is controlled using a digital potentiometer.
;
; Sources: -
;
; ================== Constant and variable declarations =======================

; Power pin to turn on the amplifier. This signal is active low.
alias amplifier_power is pin_c2
amplifier_power  = HIGH
pin_c2_direction = OUTPUT

; Settings for the digital potentiometer.
alias x9c10x_increment_pin             is pin_C6   
alias x9c10x_increment_pin_direction   is pin_C6_direction   
alias x9c10x_up_down_pin               is pin_C7    
alias x9c10x_up_down_pin_direction     is pin_C7_direction
alias x9c10x_chip_select_pin           is pin_e2 
alias x9c10x_chip_select_pin_direction is pin_e2_direction

; Include the potentiometer library. 
include digital_potentiometer_x9c10x

; Alias for the potentiometer.
alias pot_wiper is x9c10x_wiper

; Defintion of audio volume.
const byte VOLUME_OFF = X9C10X_MIN_VALUE
const byte VOLUME_MIN = 1
const byte VOLUME_MAX = 20

; Wiper goes from X9C10X_MIN_VALUE to X9C10X_MAX_VALUE. 
const byte VOLUME_STEP = X9C10X_MAX_VALUE / VOLUME_MAX

; Defintion to turn the amplifier on or off.
const bit AMPLIFIER_POWER_ON  = LOW
const bit AMPLIFIER_POWER_OFF = HIGH

; Local variable
var byte _current_volume

; ========================= Functions and Procedures ==========================

; Set the volume.
procedure wiper_set(byte in value) is

    pot_wiper = value
    _current_volume = value

end procedure


; Put the power of the amplifier on.
procedure amplifier_on() is

   amplifier_power = AMPLIFIER_POWER_ON

end procedure


; Put the power of the amplifier off.
procedure amplifier_off() is

   amplifier_power = AMPLIFIER_POWER_OFF

end procedure


procedure amplifier_init() is

   ; Wiper of potentiometer is set to the minimal position.
   x9c10x_init() 
   _current_volume = X9C10X_MIN_VALUE 
   amplifier_off()
   

end procedure

; Set the volume.
procedure volume_set(byte in value) is

    wiper_set(value * VOLUME_STEP)

end procedure



; Increase the given volume by one wiper step if not at max.
procedure volume_up(byte in out value) is
 
   if (value < X9C10X_MAX_VALUE) then
      value = value + 1
      wiper_set(value)
   end if 

end procedure


; Increase the given volume by one VOLUME_STEP if not at max.
procedure volume_step_up(byte in out value) is
 
   if (value < VOLUME_MAX) then
      value = value + 1
      wiper_set(value * VOLUME_STEP)
   end if 

end procedure


; Decrease the given volume by one VOLUME_STEP if not at min.
procedure volume_step_down(byte in out value) is
 
   if (value > VOLUME_MIN) then
      value = value - 1
      wiper_set(value * VOLUME_STEP)
   end if 

end procedure


; Return the currently set raw volume level which is the
; wiper setting.
function volume_get_raw() return byte is

   return _current_volume

end function